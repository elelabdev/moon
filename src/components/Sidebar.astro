---
import type { Section, LinkItem, GroupItem } from "../utils/nav";
import { NAV } from "../utils/nav";

const { activePath = Astro.url.pathname } = Astro.props as { activePath?: string };

const isActive = (href: string, match?: string) =>
  activePath === href || (!!match && activePath.startsWith(match));

// Here we will place a stable key for localStorage
const keyFor = (sec: string, grp: string) => `nav-open:${sec}:${grp}`;
---

<style>
  details.nav-group > summary {
    list-style: none;
  }
  details.nav-group > summary::-webkit-details-marker {
    display: none;
  }
  .chev {
    transition: transform .15s ease;
  }
  details[open] .chev {
    transform: rotate(180deg);
  }
</style>

<aside class="sidebar fixed top-0 bottom-0 w-[var(--sidebar-w)] overflow-y-auto border-r border-base-200 bg-base-100 transition-[width] duration-200">
  <div class="px-3 py-3">
    <div class="mb-5 flex items-center gap-2 px-2.5 py-1.5">
      <img src="/assets/brand/logo-light.svg" alt="MOON" class="logo-light h-[1.75rem]" />
      <img src="/assets/brand/logo-dark.svg" alt="MOON" class="logo-dark h-[1.75rem]" />
    </div>
    {NAV.map((sec: Section) => (
      <>
        <div class="mt-2 mb-2 text-[11px] uppercase tracking-wider opacity-60">{sec.section}</div>

        <div class="space-y-1">
          {sec.items.map((it) => (
            it.type === "link" ? (
              <a
                href={it.href}
                class={`block rounded-lg px-2.5 py-1.5 text-sm transition-colors ${
                  isActive(it.href, it.match)
                    ? "bg-base-300 text-base-content"
                    : "text-base-content/70 hover:bg-base-200"
                }`}
              >
                {it.label}
              </a>
            ) : (
              <details class="nav-group rounded-lg" open={it.defaultOpen} data-key={keyFor(sec.section, it.label)}>
                <summary class="flex cursor-pointer items-center justify-between rounded-lg px-2.5 py-1.5 text-sm text-base-content/80 hover:bg-base-200">
                  <span class="font-medium">{it.label}</span>
                  <svg class="chev h-4 w-4 opacity-60" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.24a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.08z" clip-rule="evenodd" />
                  </svg>
                </summary>
                <div class="mt-1 space-y-1 pl-2">
                  {(it.items as LinkItem[]).map((li) => (
                    <a
                      href={li.href}
                      class={`block rounded-lg px-2.5 py-1.5 text-sm transition-colors ${
                        isActive(li.href, li.match)
                          ? "bg-base-300 text-base-content"
                          : "text-base-content/70 hover:bg-base-200"
                      }`}
                    >
                      {li.label}
                    </a>
                  ))}
                </div>
              </details>
            )
          ))}
        </div>
      </>
    ))}
  </div>
</aside>

<script is:inline>
  document.querySelectorAll('details.nav-group').forEach((el) => {
    const key = el.getAttribute('data-key');
    if (!key) return;
    // restore
    const saved = localStorage.getItem(key);
    if (saved === '0') el.removeAttribute('open');
    if (saved === '1') el.setAttribute('open', '');
    // listen
    el.addEventListener('toggle', () => {
      localStorage.setItem(key, el.open ? '1' : '0');
    });
  });
</script>
